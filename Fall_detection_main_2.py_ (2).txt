import cv2
import time

fittoEllipse = False
cap = cv2.VideoCapture(0) # "f.mp4")
time.sleep(4)

fgbg = cv2.bgsegm.createBackgroundSubtractorMOG()
j = 0

while(1):
    rer, frame = cap.read()
    fgmask = fgbg.apply(frame)
    thresh = cv2.dilate(fgmask, None, iterations=10)  # dilate thresh

    _, contours, _ = cv2.findContours(thresh,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)

    if contours :

        #list to hold all areas
        areas = []

        for contour in contours:
            ar = cv2.contourArea(contour)
            areas.append(ar)

        max_area = max(areas, default = 0)

        #index of the list of elements with the largest area
        max_area_index = areas.index(max_area)

        #largest area contour
        cnt = contours[max_area_index]

        # M = cv2.movements(cnt)
        x,y,w,h = cv2.boundingRect(cnt)

        print ("w= ", w," h=  ",h)

        cv2.drawContours(fgmask, [cnt], 0, (255,255,0), 3) #, maxLevel = 0)
        if h < w:
            j+=1

            if j > 10:
                print ("FALL")
                cv2.putText(fgmask, 'FALL', (x, y),cv2.FONT_HERSHEY_TRIPLEX, 0.5, (255,255,255), 2)

                if  h > w:
                    j=0

        cv2.imshow("fgmask", fgmask)
        cv2.waitKey(10)


